替换空格


请实现一个函数，将一个字符串中的每个空格替换成“%20”。例如，当字符串为We Are Happy.则经过替换之后的字符串为We%20Are%20Happy。

class Solution {
public:
	void replaceSpace(char *str,int length) {
        // 如果字符串为空 或者 字符串时间长度小于零 返回
        if(str == NULL || length < 0){
            return;
        }
        // 遍历字符串 计算 空格个数 和 字符串长度
        int strLength = 0;
        int numOfSpace = 0;
        int i = 0;
        while(str[i] != '\0'){
            if(str[i] == ' '){
                numOfSpace++;
            }
            strLength++;
            ++i;
        } // end while
        // 一个空格可以替换3个字符 替换后的长度 = 原长度 + 2*空格个数
        int newLength = strLength + 2*numOfSpace;
        // 替换后的长度 和 字符串空间长度进行比较， 如果 替换后的长度小于字符串空间长度 返回
        if(newLength > length){
            return;
        }
        // 进行替换
        //两个下标 一个下标指向 替换后字符串末尾 另一个指向 原字符串末尾
        int indexOfOriginal = strLength;
        int indexNew = newLength;
        while(indexOfOriginal >= 0 && indexNew > indexOfOriginal){
            if(str[indexOfOriginal] == ' '){
                // 字符串进行搬运如果遇到空格 进行替换
                str[indexNew--] = '0';
                str[indexNew--] = '2';
                str[indexNew--] = '%';
            }else {
                // 不是空格进行搬运
                str[indexNew--] = str[indexOfOriginal];
            } // end if else
            indexOfOriginal--;
        } // end while
	} // end function
};